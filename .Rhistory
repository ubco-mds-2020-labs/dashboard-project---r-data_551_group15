# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
wts
# print(coef(sect6.wls))
# count = count + 1
# }
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
wts
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
wts
wts <- as.vector(exp(xiT%*%coef(sect6.nls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.nls), data = sect6, weights=1/wts)
sect6.wls
wts <- as.vector(exp(xiT%*%coef(sect6.nls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.nls), data = sect6, weights=1/wts)
sect6.wls
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
# while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
# print(coef(sect6.wls))
# count = count + 1
# }
count = 0
while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
print(coef(sect6.wls))
count = count + 1
}
count = 0
while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
count = count + 1
}
sect6.wls
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
knitr::opts_chunk$set(echo = TRUE)
library("MPV")
library("DAAG")
## step 1
data("lesions")
lesions$T <- as.numeric(as.character(lesions$T))
xyplot(ACF.Total ~ T|INJ, data = subset(lesions, SECT = 6))
sect6 <- subset(lesions, SECT == 6)
n <- nrow(sect6)
xiT <- cbind(rep(1,n), sect6$T, sect6$INJ)
b0 <- c(0.5, 1,0.5)
X <- cbind(exp(xiT%*%b0), exp(xiT%*%b0), exp(xiT%*%b0))*xiT
xiTb0 <- xiT%*%b0
y <- sect6$ACF.Total
yprime <- y + xiTb0*exp(xiTb0) - exp(xiTb0)
X.QR <- qr(X)
Q1 <- qr.Q(X.QR)
U <- qr.R(X.QR)
beta <- backsolve(U, t(Q1)%*%yprime)
beta
tol <- 1e-7
while (max(abs(b0 - beta)) > tol){
b0 <- beta
X <- cbind(exp(xiT%*%b0), exp(xiT%*%b0),exp(xiT%*%b0))*xiT
xiTb0 <- xiT%*%b0
yprime <- y + xiTb0*exp(xiTb0) - exp(xiTb0)
X.QR <- qr(X)
Q1 <- qr.Q(X.QR)
U <- qr.R(X.QR)
beta <- backsolve(U, t(Q1)%*%yprime)
}
beta
sect6.nls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = c(beta0=.5, beta1=1, beta2=.5),
data = sect6)
sect6.nls
wts <- as.vector(exp(xiT%*%coef(sect6.nls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.nls), data = sect6, weights=1/wts)
sect6.wls
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
sect6.wls
count = 0
while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
count = count + 1
}
sect6.wls
wts <- as.vector(exp(xiT%*%coef(sect6.nls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.nls), data = sect6, weights=1/wts)
sect6.wls
count = 0
while (count < 5) {
wts <- as.vector(exp(xiT%*%coef(sect6.wls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.wls), data = sect6, weights=1/wts)
count = count + 1
}
sect6.wls
knitr::opts_chunk$set(echo = TRUE)
library("MPV")
library("DAAG")
## step 1
data("lesions")
lesions$T <- as.numeric(as.character(lesions$T))
xyplot(ACF.Total ~ T|INJ, data = subset(lesions, SECT = 6))
sect6 <- subset(lesions, SECT == 6)
n <- nrow(sect6)
xiT <- cbind(rep(1,n), sect6$T, sect6$INJ)
b0 <- c(0.5, 1,0.5)
X <- cbind(exp(xiT%*%b0), exp(xiT%*%b0), exp(xiT%*%b0))*xiT
xiTb0 <- xiT%*%b0
y <- sect6$ACF.Total
yprime <- y + xiTb0*exp(xiTb0) - exp(xiTb0)
X.QR <- qr(X)
Q1 <- qr.Q(X.QR)
U <- qr.R(X.QR)
beta <- backsolve(U, t(Q1)%*%yprime)
beta
tol <- 1e-7
while (max(abs(b0 - beta)) > tol){
b0 <- beta
X <- cbind(exp(xiT%*%b0), exp(xiT%*%b0),exp(xiT%*%b0))*xiT
xiTb0 <- xiT%*%b0
yprime <- y + xiTb0*exp(xiTb0) - exp(xiTb0)
X.QR <- qr(X)
Q1 <- qr.Q(X.QR)
U <- qr.R(X.QR)
beta <- backsolve(U, t(Q1)%*%yprime)
}
beta
sect6.nls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = c(beta0=.5, beta1=1, beta2=.5),
data = sect6)
sect6.nls
wts <- as.vector(exp(xiT%*%coef(sect6.nls)))
sect6.wls <- nls(y ~ exp(beta0 + beta1*T + beta2*INJ),
start = coef(sect6.nls), data = sect6, weights=1/wts)
sect6.wls
possion <- glm(ACF.Total ~ T + INJ,
data = sect6, family=poisson)
possion
head(sect6)
#a.
qpoisson <- glm(ACF.Total Ëœ T + INJ + T:INJ, data=sect6, family = quasipoisson)
#a.
qpoisson <- glm(ACF.Total ~ T + INJ + T:INJ, data=sect6, family = quasipoisson)
summary(qpoisson)
nb <- glm.nb()
library(MASS)
library(MASS)
nb <- glm.nb()
library(MASS)
nb <- glm.nb(ACF.Total ~ T + INJ + T:INJ, data = sect6)
library(MASS)
nb <- glm.nb(ACF.Total ~ T + INJ + T:INJ, data = sect6)
summary(nb)
#a.
qpoisson <- glm(ACF.Total ~ T + INJ + T:INJ, data=sect6, family = quasipoisson)
summary(qpoisson)
#b.
#refit:
nb <- glm.nb(ACF.Total ~ T + INJ, data = sect6)
summary(nb)
#refit:
nb <- glm.nb(ACF.Total ~ T + INJ, data = sect6)
summary(nb)
#b.
#refir
qpoisson <- glm(ACF.Total ~ T + INJ, data=sect6, family = quasipoisson)
summary(qpoisson)
#c.
nb.sim <- simulate(nb)
#c.
nb.sim <- simulate(nb)$sim_1
nb.sim
#c.
nb.sim <- simulate(nb)$sim_1
nb.sim.refit <- glm.nb(ACF.Total ~ T + INJ, data = nb.sim)
#c.
nb.sim <- as.data.frame(simulate(nb)$sim_1)
nb.sim.refit <- glm.nb(ACF.Total ~ T + INJ, data = nb.sim)
View(nb.sim)
#c.
nb.sim <- simulate(nb)$sim_1
nb.sim.refit <- glm.nb(ACF.Total ~ T + INJ, data = nb.sim)
#c.
nb.sim <- simulate(nb)$sim_1
nb.sim.refit <- glm.nb(nb.sim ~ T + INJ, data = sect6)
summary(nb.sim.refit)
# q1.
data <- p13.6
# q1.
head(p13.6)
summary(ex.1)
ex.1 <- glm(numfail ~ months, data = p13.6, family = poisson(link = "log"))
summary(ex.1)
# summary
par(mfrow=c(2,2), mar=c(4, 4, 2, 1))
plot(ex.1)
# ex.2
head(frogs)
View(data)
#logistic regresion:
frog.log <- glm(pres.abs ~ distance + NoOfPools + meanmin + meanmax, data = frogs, family = binomial)
summary(frog.log)
plot(frog.log)
par(mfrow=c(2,2), mar=c(4, 4, 2, 1))
plot(frog.log)
clean
clean
clear
install.packages("dash")
install.packages("dash")
library(devtools)
install_github('facultyai/dash-bootstrap-components@r-release')
library(dash)
library(dashHtmlComponents)
app = Dash$new()
app$run_server(dubug = T)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
library(dashCoreComponents)
library(dashBootstrapComponents)
app = Dash$new(external_stylesheets = dbcThemes$BOOTSTRAP)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/init.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/dataWrangling.R', echo=TRUE)
# This file load&cleans the data.
library(tidyverse)
library(ggplot2)
library(dplyr)
library(reshape)
library(ggpubr)
library(cowplot)
Canada_economic_indicators <- read.csv('../data/raw/Canada_economic_indicators.csv')
setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Canada_economic_indicators <- read.csv('Canada_economic_indicators.csv')
Canada_economic_indicators <- read.csv('../data/raw/Canada_economic_indicators.csv')
Canada_economic_indicators_pct <- read.csv('../data/raw/Canada_economic_indicators_pct.csv')
earning_pct <- read.csv('../data/raw/earnings_pct.csv')
earning <- read.csv('../data/raw/earnings.csv')
industry_gdp <- read.csv('../data/raw/industry_gdp.csv')
industry_gdp_pct <- read.csv('../data/raw/industry_gdp_pct.csv')
this.dir <- dirname(parent.frame(2)$ofile)
this.dir <- dirname(parent.frame(2))
install.packages("rstudioapi")
install.packages("rstudioapi")
library(rstudioapi)
script.dir <- dirname(sys.frame(1)$ofile)
setwd(getSrcDirectory()[1])
getSrcDirectory()[1]
getSrcDirectory()
# import dataWrangling and graphs
source("dataWrangling.R")
source("graphs.R")
setwd(getSrcDirectory()[1])
script.dir <- dirname(sys.frame(1)$ofile)
filename = "dataWrangling.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
Canada_economic_indicators <- read.csv('../data/raw/Canada_economic_indicators.csv')
Canada_economic_indicators_pct <- read.csv('../data/raw/Canada_economic_indicators_pct.csv')
earning_pct <- read.csv('../data/raw/earnings_pct.csv')
earning <- read.csv('../data/raw/earnings.csv')
industry_gdp <- read.csv('../data/raw/industry_gdp.csv')
industry_gdp_pct <- read.csv('../data/raw/industry_gdp_pct.csv')
Canada_economic_indicators <- transform(Canada_economic_indicators, Year = as.character(Canada_economic_indicators$Year))
Canada_economic_indicators_pct <- transform(Canada_economic_indicators_pct, Year = as.character(Canada_economic_indicators$Year))
colnames(Canada_economic_indicators) <- c("Geography", "Year", "Expenditure based GDP (2012 chained C$)", "Expenditure based GDP (current C$)", "Income based GDP (current C$)", "Industry GDP (current C$)", "Industry GDP (chained C$)", "CPI all-items", "CPI gasoline", "Labour force", 'Employment', 'Unemployment', 'Unemployment rate', 'Population', "Expenditure based GDPpC (2012 chained C$)", "Expenditure based GDPpC (current C$)", "Income based GDPpC (current C$)", "Industry GDPpC (current C$)", "Industry GDPpC (chained C$)")
colnames(Canada_economic_indicators_pct) <- c("Geography", "Year", "Expenditure based GDP (2012 chained C$)", "Expenditure based GDP (current C$)", "Income based GDP (current C$)", "Industry GDP (current C$)", "Industry GDP (chained C$)", "CPI all-items", "CPI gasoline", "Labour force", 'Employment', 'Unemployment', 'Unemployment rate', 'Population', "Expenditure based GDPpC (2012 chained C$)", "Expenditure based GDPpC (current C$)", "Income based GDPpC (current C$)", "Industry GDPpC (current C$)", "Industry GDPpC (chained C$)")
Canada_economic_indicators$'Unemployment rate' <- Canada_economic_indicators$'Unemployment' / Canada_economic_indicators$"Labour force"
Canada_economic_indicators_pct$'Unemployment rate' <- Canada_economic_indicators$'Unemployment' / Canada_economic_indicators$"Labour force"
earning <- transform(earning, Year = as.character(earning$Year))
colnames(earning) <- c("Geography", "Year", "All industries", "Goods producing sector", "Service producing sector")
earning_pct <- transform(earning_pct, Year = as.character(earning$Year))
colnames(earning_pct) <- c("Geography", "Year", "All industries", "Goods producing sector", "Service producing sector")
industry_gdp <- transform(industry_gdp, Year = as.character(industry_gdp$Year))
colnames(industry_gdp) <- c("Geography", 'Industry', "Year", "Industry GDP (current C$)", "Industry GDP (chained C$)")
industry_gdp_pct <- transform(industry_gdp_pct, Year = as.character(industry_gdp$Year))
colnames(industry_gdp_pct) <- c("Geography", 'Industry', "Year", "Industry GDP (current C$)", "Industry GDP (chained C$)")
source("dataWrangling.R")
# loads all wrangled data
source("dataWrangling.R")
print
# get the current dirctory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/dataWrangling.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
print(earning)
head(earning)
head(earning)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
year = 2019
geo = 'British Columbia'
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
first_gdp
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
tab1_one(year, geo)
tab1_one()
tab1_two(year, geo)
#
tab1_two <- function(year,geo){
two <- Canada_economic_indicators %>%
filter(Geography == geo, Year <= year) %>%
select(Year, "Expenditure based GDP (2012 chained C$)", "Expenditure based GDP (current C$)", "Income based GDP (current C$)", "Industry GDP (chained C$)") %>%
gather(key = "variable", value = "value", -Year) %>%
ggplot() +
aes(x = Year, y = value) +
geom_area(aes(fill = variable, group = 1)) + facet_grid(variable~.) +
labs(title='GDP Evolution', y='GDP (Dollars x 1,000,000)', x='Year') +
scale_y_continuous(labels = scales::label_dollar()) +
theme_minimal() + theme(
plot.title = element_text(size = 30, face= 'bold', hjust = 0.5),
legend.position = 'none',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_text(size=12),
axis.text.x=element_text(size=12),
axis.ticks.x=element_blank(),
strip.text.y.right = element_blank())
two
}
tab1_two(year, geo)
tab1_two(year,geo)
View(tab1_one)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source("graphs.R")
source("data/graphs.R")
source("~/data/graphs.R")
source("data/graphs.R")
source("src/graphs.R")
# import dataWrangling and graphs
source("src/dataWrangling.R")
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source("~/src/graphs.R")
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source("src/graphs.R")
source("src/dataWrangling.R")
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
library(rstudioapi)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/dataWrangling.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
# setwd("C:/Users/Ben Gao/Documents/GitHub/dashboard-project---r-data_551_group15")
# source("src/dataWrangling.R")
source("C:/Users/Ben Gao/Documents/GitHub/dashboard-project---r-data_551_group15/src/dataWrangling.R")
# setwd("C:/Users/Ben Gao/Documents/GitHub/dashboard-project---r-data_551_group15")
# source("src/dataWrangling.R")
source("C:/Users/Ben Gao/Documents/GitHub/dashboard-project---r-data_551_group15/src/graphs.R")
# get the current dirctory
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/src/dataWrangling.R', echo=TRUE)
# Test:
tab5_two(year,geo)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
# import dataWrangling and graphs
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# import dataWrangling and graphs
dirname(rstudioapi::getActiveDocumentContext()$path)
# import dataWrangling and graphs
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# import dataWrangling and graphs
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("src/dataWrangling.R")
source("src/graphs.R")
source("src/dataWrangling.R")
source("src/graphs.R")
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
# Import necessary libraries
library(dash)
library(dashHtmlComponents)
library(dashCoreComponents)
library(dashBootstrapComponents)
library(rstudioapi)
# import dataWrangling and graphs
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("src/dataWrangling.R")
source("src/graphs.R")
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
rstudioapi::getActiveDocumentContext()$path
rstudioapi::getActiveDocumentContext()$path
getActiveDocumentContext()$path
rstudioapi::getActiveDocumentContext()$path
getActiveDocumentContext()
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
source('~/Documents/GitHub/dashboard-project---r-data_551_group15/app.R', echo=TRUE)
